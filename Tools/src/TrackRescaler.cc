#include "JMTucker/Tools/interface/AnalysisEras.h"
#include "JMTucker/Tools/interface/TrackRescaler.h"
#include <vector>  //Alec added
#include <iostream> //Alec added
using namespace std; //Alec added

//FIXME: need further study to see whether this need to be changed
//JetHT parameter apply to high HT
namespace jmt {
  void TrackRescaler::set_JetHT2017B(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[8] = {1.003954411196716, 0.04680608038556485, 1.1651640253424076, 0.010686515626581808, 1.2423728669230774, 0.002510211465163767, 1.301491397216935, -0.0005992241020962791};
      const double p_dsz[10] = {1.0245229183638793, 0.06544824469215105, 1.1860096333638355, 0.009315198253046261, 1.2534005803324926, -0.0010188848309496473, 1.2759550243574909, -0.0033600655572815436, 2.0547714269037252e-05, -3.967354320030131e-08};
      const double p_dxydsz[5] = {1.2373808693167834, -0.06306772746156655, 0.9989407561722071, 0.004296811774057659, 1.0281436760070548};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=10)*(p_dxy[2]+p_dxy[3]*x)+(x>10&&x<=19)*(p_dxy[4]+p_dxy[5]*x)+(x>19&&x<=200)*(p_dxy[6]+p_dxy[7]*x)+(x>200)*(p_dxy[6]+p_dxy[7]*200),
                  (x<=3)*(p_dsz[0]+p_dsz[1]*x)+(x>3&&x<=7)*(p_dsz[2]+p_dsz[3]*x)+(x>7&&x<=11)*(p_dsz[4]+p_dsz[5]*x)+(x>11&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2)+p_dsz[9]*pow(x,3))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)+p_dsz[9]*pow(200,3)),
                  (x<=3.5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>3.5&&x<=20)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>20)*p_dxydsz[4]
                  );
    }
    else {
      const double p_dxy[8] = {0.9809194238515303, 0.02988345020861421, 1.0494209346433279, 0.01638247946618149, 1.1747904134913318, 0.004173705981459077, 1.27170013468283, -0.0015234534159011834};
      const double p_dsz[7] = {0.9741157497540216, 0.03454031770932743, 1.1551685052673273, 0.008041427889944022, 1.3366714462830347, -0.0034743381492504328, 1.3448120785319356e-05};
      const double p_dxydsz[5] = {1.1772587629670426, -0.012843798533138594, 1.097301005478153, -0.005013846780833367, 0.952633219303397};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=10)*(p_dxy[2]+p_dxy[3]*x)+(x>10&&x<=19)*(p_dxy[4]+p_dxy[5]*x)+(x>19&&x<=200)*(p_dxy[6]+p_dxy[7]*x)+(x>200)*(p_dxy[6]+p_dxy[7]*200),
                  (x<=7)*(p_dsz[0]+p_dsz[1]*x)+(x>7&&x<=17)*(p_dsz[2]+p_dsz[3]*x)+(x>17&&x<=200)*(p_dsz[4]+p_dsz[5]*x+p_dsz[6]*pow(x,2))+(x>200)*(p_dsz[4]+p_dsz[5]*200+p_dsz[6]*pow(200,2)),
                  (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>5&&x<=21)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>21)*p_dxydsz[4]
                  );
    }
  }

  void TrackRescaler::set_JetHT2017C(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[11] = {1.0161768012596906, 0.042041901495531005, 1.1717021770368574, 0.00669013252978249, 1.1971514114269148, 0.0035674496589963335, 1.2470479301245583, -0.0009085954728102639, 1.251603593260837, -0.001172576224929787, 1.9465546830349183e-06};
      const double p_dsz[11] = {1.0492585958417804, 0.08118563766830778, 1.2705697427223215, 0.0032212677086543235, 1.3094832265892142, -0.0037477087686636043, 1.3514702985281841, -0.00876085217779441, 8.598124845502029e-05, -3.842285480601181e-07, 6.029555491156424e-10};
      const double p_dxydsz[5] = {1.291753251455697, -0.11200986158634538, 0.8988572749578425, -0.000993555909164761, 0.8232367847064167};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=8)*(p_dxy[2]+p_dxy[3]*x)+(x>8&&x<=11)*(p_dxy[4]+p_dxy[5]*x)+(x>11&&x<=19)*(p_dxy[6]+p_dxy[7]*x)+(x>19&&x<=200)*(p_dxy[8]+p_dxy[9]*x+p_dxy[10]*pow(x,2))+(x>200)*(p_dxy[8]+p_dxy[9]*200+p_dxy[10]*pow(200,2)),
                  (x<=3)*(p_dsz[0]+p_dsz[1]*x)+(x>3&&x<=7)*(p_dsz[2]+p_dsz[3]*x)+(x>7&&x<=12)*(p_dsz[4]+p_dsz[5]*x)+(x>12&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2)+p_dsz[9]*pow(x,3)+p_dsz[10]*pow(x,4))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)+p_dsz[9]*pow(200,3)+p_dsz[10]*pow(200,4)),
                  (x<=3.5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>3.5&&x<=20)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>20)*p_dxydsz[4]
                  );
    }
    else {
      const double p_dxy[9] = {0.9839923368596756, 0.02430462999210955, 1.0180594006964852, 0.016554773836364164, 1.1079693887355095, 0.005217622826386567, 1.2455318260814945, -0.00301224704167776, 9.488960776721558e-06};
      const double p_dsz[11] = {0.9493659211706715, 0.0822651027868656, 1.291903962581168, 0.01824914776720852, 1.4851588554912978, -0.0005827669494445938, 1.62279301085992, -0.010047580573274734, 5.415895149532794e-05, 1.0757936894853994e-08, -5.818483773901319e-10};
      const double p_dxydsz[5] = {1.1592379138920268, -0.06068316015086136, 0.8522685428672403, -0.006100542684956953, 0.7774233037126433};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=8)*(p_dxy[2]+p_dxy[3]*x)+(x>8&&x<=19)*(p_dxy[4]+p_dxy[5]*x)+(x>19&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=5.5)*(p_dsz[0]+p_dsz[1]*x)+(x>5.5&&x<=10)*(p_dsz[2]+p_dsz[3]*x)+(x>10&&x<=19)*(p_dsz[4]+p_dsz[5]*x)+(x>19&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2)+p_dsz[9]*pow(x,3)+p_dsz[10]*pow(x,4))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)+p_dsz[9]*pow(200,3)+p_dsz[10]*pow(200,4)),
                  (x<=4.5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>4.5&&x<=21)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>21)*p_dxydsz[4]
                  );
    }
  }

  void TrackRescaler::set_JetHT2017DE(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[9] = {0.9958341628606665, 0.023815756395143658, 1.071738238640757, 0.006782337094144922, 1.1330981925851835, 0.00015785672276847224, 1.170129041506572, -0.0016917369270458358, 5.3937634669262654e-06};
      const double p_dsz[8] = {1.0145308767949242, 0.06023485905656432, 1.1774762080717533, 0.004158899681702615, 1.251578501191003, -0.005737179860514227, 4.03056359898546e-05, -9.546973869635759e-08};
      const double p_dxydsz[5] = {1.0633535739740558, -0.048896075027159376, 0.8892955287512224, -0.0009422431396516016, 0.8383948468014116};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=9)*(p_dxy[2]+p_dxy[3]*x)+(x>9&&x<=20)*(p_dxy[4]+p_dxy[5]*x)+(x>20&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=3)*(p_dsz[0]+p_dsz[1]*x)+(x>3&&x<=8)*(p_dsz[2]+p_dsz[3]*x)+(x>8&&x<=200)*(p_dsz[4]+p_dsz[5]*x+p_dsz[6]*pow(x,2)+p_dsz[7]*pow(x,3))+(x>200)*(p_dsz[4]+p_dsz[5]*200+p_dsz[6]*pow(200,2)+p_dsz[7]*pow(200,3)),
                  (x<=3.5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>3.5&&x<=20)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>20)*p_dxydsz[4]
                  );
    }
    else {
      const double p_dxy[9] = {0.9902445099668238, 0.006934208617877735, 0.9744731512541432, 0.012034983205999293, 1.0629826235864053, 0.0029136479108657146, 1.170459333797536, -0.0018981811098766116, 6.403573224467264e-06};
      const double p_dsz[10] = {0.9655353376051706, 0.03948647373196264, 1.1446808507342674, 0.010962801074448891, 1.2599056250973795, 0.00033785088924465306, 1.3942188620396598, -0.00684412727829742, 4.332240884536905e-05, -8.792941673523394e-08};
      const double p_dxydsz[5] = {0.9283521729147935, -0.003769450899472301, 0.8980042607612827, -0.0022320448484044655, 0.8695603485477653};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=9)*(p_dxy[2]+p_dxy[3]*x)+(x>9&&x<=20)*(p_dxy[4]+p_dxy[5]*x)+(x>20&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=7)*(p_dsz[0]+p_dsz[1]*x)+(x>7&&x<=13)*(p_dsz[2]+p_dsz[3]*x)+(x>13&&x<=21)*(p_dsz[4]+p_dsz[5]*x)+(x>21&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2)+p_dsz[9]*pow(x,3))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)+p_dsz[9]*pow(200,3)),
                  (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>5&&x<=21)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>21)*p_dxydsz[4]
                  );
    }
  }

  void TrackRescaler::set_JetHT2017F(double x, double eta) {

    if (fabs(eta) < 1.5) {
      const double p_dxy[9] = {1.02507143855885, 0.035682416838607, 1.1630170173759637, 0.004135059939736778, 1.2157833722885292, -0.0015115779115216182, 1.231899976429208, -0.0026144724219604736, 7.601335880195158e-06};
      const double p_dsz[10] = {1.0531495875855903, 0.05985532137012233, 1.2357977380860046, 0.004052611805848134, 1.2812877188371545, -0.003684138598605247, 1.3203497359522545, -0.00782694386275162, 5.598493204763304e-05, -1.3740304386617287e-07};
      const double p_dxydsz[7] = {1.2055709843570976, -0.06934397474723346, 0.9623420790557042, -0.0029739123523973656, 0.9247086191627053, -0.0027398170929929418, 0.7654225404225834};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=9)*(p_dxy[2]+p_dxy[3]*x)+(x>9&&x<=17)*(p_dxy[4]+p_dxy[5]*x)+(x>17&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=3.5)*(p_dsz[0]+p_dsz[1]*x)+(x>3.5&&x<=6)*(p_dsz[2]+p_dsz[3]*x)+(x>6&&x<=13)*(p_dsz[4]+p_dsz[5]*x)+(x>13&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2)+p_dsz[9]*pow(x,3))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)+p_dsz[9]*pow(200,3)),
                  (x<=3.5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>3.5&&x<=20)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>20&&x<=60)*(p_dxydsz[4]+p_dxydsz[5]*x)+(x>60)*p_dxydsz[6]
                  );
    }
    else {
      const double p_dxy[9] = {0.9855065768424701, 0.021753810507718217, 1.0549206517648415, 0.009742124539396489, 1.1237284934232026, 0.0034751924685682317, 1.2328186747546215, -0.002983564755841868, 9.62782905533306e-06};
      const double p_dsz[8] = {0.9576484312028871, 0.06012619494580462, 1.2849093402304101, 0.007793339895653828, 1.5233812422690591, -0.009001069977632883, 5.652031220754525e-05, -1.213962343039487e-07};
      const double p_dxydsz[5] = {1.0720609338851717, -0.025840782949423238, 0.9241594442252488, -0.004200723132161754, 0.8428807481959472};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=9)*(p_dxy[2]+p_dxy[3]*x)+(x>9&&x<=17)*(p_dxy[4]+p_dxy[5]*x)+(x>17&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=7)*(p_dsz[0]+p_dsz[1]*x)+(x>7&&x<=16)*(p_dsz[2]+p_dsz[3]*x)+(x>16&&x<=200)*(p_dsz[4]+p_dsz[5]*x+p_dsz[6]*pow(x,2)+p_dsz[7]*pow(x,3))+(x>200)*(p_dsz[4]+p_dsz[5]*200+p_dsz[6]*pow(200,2)+p_dsz[7]*pow(200,3)),
                  (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>5&&x<=21)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>21)*p_dxydsz[4]
                  );
    }
  }

  void TrackRescaler::set_JetHT2018A(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[4] = {0.9944651408847637, 0.0003100409123238388, 1.0133318600684997, -0.0002725492604450176};
      const double p_dsz[7] = {0.9545689305290876, -0.005788633682068279, 0.9163531438716942, 0.008255804537721637, -0.0002541675288772417, 0.9906779761637563, -0.000408665473206192};
      const double p_dxydsz[6] = {0.9552901105055515, 0.0553433274762117, 1.2577461745166036, -0.013442809569614248, 0.9387984003983484, -0.0008562833690257464};

      scales_.set((x<=15)*(p_dxy[0]+p_dxy[1]*x)+(x>15&&x<=200)*(p_dxy[2]+p_dxy[3]*x)+(x>200)*(p_dxy[2]+p_dxy[3]*200),
                  (x<=3.5)*(p_dsz[0]+p_dsz[1]*x)+(x>3.5&&x<=20)*(p_dsz[2]+p_dsz[3]*x+p_dsz[4]*pow(x,2))+(x>20&&x<=200)*(p_dsz[5]+p_dsz[6]*x)+(x>200)*(p_dsz[5]+p_dsz[6]*200),
                  (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>5&&x<=10)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>10&&x<=25)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>25&&x<=200)*(p_dxydsz[4]+p_dxydsz[5]*x)+(x>200)*(p_dxydsz[4]+p_dxydsz[5]*200)
                  );
    }
    else {
      const double p_dxy[9] = {0.9956638266790775, 0.01311762974898705, 1.0324554787776068, 0.0028794133659762076, 1.0435318764233166, 0.0009594998914445711, 1.0805733205008456, -0.00090961749403609, 2.7865570333431475e-06};
      const double p_dsz[8] = {1.0140154016738616, -0.04030698229824987, 0.8577572602839483, -0.004629518437424471, 0.7862533145771442, 0.002836810498017997, -2.4938561562441677e-05, 6.667933060770695e-08};
      const double p_dxydsz[7] = {1.2031550984529447, 0.017203685604559395, 1.384121127295515, -0.010099538962099513, 1.2839748504629604, -0.0068437725679720215, 0.8675620454856555};

      scales_.set((x<=4)*(p_dxy[0]+p_dxy[1]*x)+(x>4&&x<=10)*(p_dxy[2]+p_dxy[3]*x)+(x>10&&x<=22)*(p_dxy[4]+p_dxy[5]*x)+(x>22&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=5)*(p_dsz[0]+p_dsz[1]*x)+(x>5&&x<=10)*(p_dsz[2]+p_dsz[3]*x)+(x>10&&x<=200)*(p_dsz[4]+p_dsz[5]*x+p_dsz[6]*pow(x,2)+p_dsz[7]*pow(x,3))+(x>200)*(p_dsz[4]+p_dsz[5]*200+p_dsz[6]*pow(200,2)+p_dsz[7]*pow(200,3)),
                  (x<=7)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>7&&x<=20)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>20&&x<=60)*(p_dxydsz[4]+p_dxydsz[5]*x)+(x>60)*p_dxydsz[6]
                  );
    }
  }

  void TrackRescaler::set_JetHT2018B(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[6] = {1.0256264904575256, 0.009715735968613925, 1.068844323041154, 0.00033895695306054006, 1.0848778079691845, -0.0006977308728749745};
      const double p_dsz[9] = {0.9833226242346282, 0.0071660524462303895, 0.9986713490547589, 0.0049036996534738775, 1.0388229095240424, 0.0005066627844654905, 1.0783250345578144, -0.0015397166527444765, 4.242917947464464e-06};
      const double p_dxydsz[7] = {1.124793037516908, 0.01914449930639376, 1.2810760942113992, -0.015293440249163699, 1.0148982357550616, -0.0025529706682178525, 8.59087101168877e-06};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=20)*(p_dxy[2]+p_dxy[3]*x)+(x>20&&x<=200)*(p_dxy[4]+p_dxy[5]*x)+(x>200)*(p_dxy[4]+p_dxy[5]*200),
                  (x<=4)*(p_dsz[0]+p_dsz[1]*x)+(x>4&&x<=10)*(p_dsz[2]+p_dsz[3]*x)+(x>10&&x<=20)*(p_dsz[4]+p_dsz[5]*x)+(x>20&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)),
                  (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>5&&x<=20)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>20&&x<=200)*(p_dxydsz[4]+p_dxydsz[5]*x+p_dxydsz[6]*pow(x,2))+(x>200)*(p_dxydsz[4]+p_dxydsz[5]*200+p_dxydsz[6]*pow(200,2))
                  );
    }
    else {
      const double p_dxy[7] = {0.9942554971947344, 0.029208330046791322, 1.1235485672857737, 0.00027768700364697133, 1.187023460774488, -0.002575725575608303, 8.245747692776023e-06};
      const double p_dsz[7] = {1.0167140774242465, -0.032708194933232064, 0.9324407187709378, -0.011435288449341503, 0.0005377023719642616, 0.8940958127845231, 0.0001301033835020374};
      const double p_dxydsz[7] = {1.4789398005907999, 0.013491081544295418, 1.6937002770041638, -0.02092983741448696, 1.4393828519124914, -0.00969425131501225, 3.8016115943619035e-05};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=25)*(p_dxy[2]+p_dxy[3]*x)+(x>25&&x<=200)*(p_dxy[4]+p_dxy[5]*x+p_dxy[6]*pow(x,2))+(x>200)*(p_dxy[4]+p_dxy[5]*200+p_dxy[6]*pow(200,2)),
                  (x<=4)*(p_dsz[0]+p_dsz[1]*x)+(x>4&&x<=17)*(p_dsz[2]+p_dsz[3]*x+p_dsz[4]*pow(x,2))+(x>17&&x<=200)*(p_dsz[5]+p_dsz[6]*x)+(x>200)*(p_dsz[5]+p_dsz[6]*200),
                  (x<=6)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>6&&x<=20)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>20&&x<=200)*(p_dxydsz[4]+p_dxydsz[5]*x+p_dxydsz[6]*pow(x,2))+(x>200)*(p_dxydsz[4]+p_dxydsz[5]*200+p_dxydsz[6]*pow(200,2))
                  );
    }
  }

  void TrackRescaler::set_JetHT2018C(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[7] = {1.0302540567003182, 0.013197495129669386, -0.019689839265792486, 0.0011915978744290266, 1.1015931462176, -0.0017612236034551046, 4.940039349770814e-06};
      const double p_dsz[9] = {0.9912887712662574, 0.00859718807110327, 1.0167899738314499, 0.004188850233047356, 1.063093537733667, -0.00035888586676950413, 1.0828841838238998, -0.0015723297743335614, 3.91610610491999e-06};
      const double p_dxydsz[7] = {1.180729792563169, 0.009006964511076306, 1.2731621239981623, -0.014484683652236648, 0.9761251034739371, -0.002575876654600912, 1.0393275942124709e-05};

      scales_.set((x<=4)*(p_dxy[0]+p_dxy[1]*x)+(x>4&&x<=20)*(p_dxy[2]+p_dxy[3]*x)+(x>4&&x<=200)*(p_dxy[4]+p_dxy[5]*x+p_dxy[6]*pow(x,2))+(x>200)*(p_dxy[4]+p_dxy[5]*200+p_dxy[6]*pow(200,2)),
                  (x<=5)*(p_dsz[0]+p_dsz[1]*x)+(x>5&&x<=9)*(p_dsz[2]+p_dsz[3]*x)+(x>9&&x<=17)*(p_dsz[4]+p_dsz[5]*x)+(x>17&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)),
                  (x<=4)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>4&&x<=25)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>25&&x<=200)*(p_dxydsz[4]+p_dxydsz[5]*x+p_dxydsz[6]*pow(x,2))+(x>200)*(p_dxydsz[4]+p_dxydsz[5]*200+p_dxydsz[6]*pow(200,2))
                  );
    }
    else {
      const double p_dxy[9] = {0.9930850416130731, 0.034917683150413985, 1.0937098590923977, 0.007629689779291711, 1.159171907659493, -0.00021289424286392985, 1.1988856358148134, -0.0024894191562249246, 9.85583519235196e-06};
      const double p_dsz[8] = {1.008840672713832, -0.02714063566702515, 0.9046206654979322, -0.0030406210476378818, 0.8772810420132723, 0.0004512486169276639, 0.8973183732699721, 7.82644843746967e-05};
      const double p_dxydsz[8] = {1.5841905135970438, 0.008588585620311284, 1.585498321932181, -0.0017576002355790517, 1.6922017618757823, -0.016221930264984336, 1.0946507830770524, -0.0013293929099910803};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=9)*(p_dxy[2]+p_dxy[3]*x)+(x>9&&x<=20)*(p_dxy[4]+p_dxy[5]*x)+(x>20&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=5)*(p_dsz[0]+p_dsz[1]*x)+(x>5&&x<=9)*(p_dsz[2]+p_dsz[3]*x)+(x>9&&x<=17)*(p_dsz[4]+p_dsz[5]*x)+(x>17&&x<=200)*(p_dsz[6]+p_dsz[7]*x)+(x>200)*(p_dsz[6]+p_dsz[7]*200),
                  (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>5&&x<=10)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>10&&x<=40)*(p_dxydsz[4]+p_dxydsz[5]*x)+(x>40&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x)+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200)
                  );
    }
  }

  void TrackRescaler::set_JetHT2018D(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[9] = {1.0149539511516237, 0.026557574255677584, 1.0775759322350924, 0.005199456392796661, 1.1172567499833552, 0.00029550032896444485, 1.144144230550563, -0.0015803270993739878, 3.7139899854107313e-06};
      const double p_dsz[9] = {1.0016164882163539, 0.014316358907761777, 1.0372583625077623, 0.00691907940640445, 1.0951155778742487, 0.0004128671983521199, 1.1392404223219428, -0.002156753822489316, 6.403416833996928e-06};
      const double p_dxydsz[7] = {1.152256405398597, 0.02069954776458397, 1.3494744427024379, -0.0166970053084306, 1.0872513823821675, -0.004525737159592511, 0.8255652889052753};

      scales_.set((x<=3)*(p_dxy[0]+p_dxy[1]*x)+(x>3&&x<=10)*(p_dxy[2]+p_dxy[3]*x)+(x>10&&x<=15)*(p_dxy[4]+p_dxy[5]*x)+(x>15&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=5)*(p_dsz[0]+p_dsz[1]*x)+(x>5&&x<=9)*(p_dsz[2]+p_dsz[3]*x)+(x>9&&x<=17)*(p_dsz[4]+p_dsz[5]*x)+(x>17&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)),
                  (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>5&&x<=20)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>20&&x<=60)*(p_dxydsz[4]+p_dxydsz[5]*x)+(x>60)*p_dxydsz[6]
                  );
    }
    else {
      const double p_dxy[9] = {0.994381147495573, 0.03648365798779281, 1.1122747895474503, 0.007517290214880828, 1.1685396038118878, 0.0016399776215087246, 1.2358122699505796, -0.002481691850650871, 9.008389210669608e-06};
      const double p_dsz[9] = {1.0208298538168237, -0.015906515857588968, 0.9513989682071168, -0.00016704431123983966, 0.9432501513463789, 0.0011105386766240154, 0.9711559352781072, -1.6347157758553316e-05, -1.0233711920211618e-07};
      const double p_dxydsz[9] = {1.5916557054593765, -0.013311726870981673, 1.5389935556589058, -0.005360374120004968, 2.1087651673683094, -0.04134596978138514, 1.4804181459721781, -0.009180041573825893, 0.9340573014121997};

      scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x)+(x>5&&x<=9)*(p_dxy[2]+p_dxy[3]*x)+(x>9&&x<=17)*(p_dxy[4]+p_dxy[5]*x)+(x>17&&x<=200)*(p_dxy[6]+p_dxy[7]*x+p_dxy[8]*pow(x,2))+(x>200)*(p_dxy[6]+p_dxy[7]*200+p_dxy[8]*pow(200,2)),
                  (x<=5)*(p_dsz[0]+p_dsz[1]*x)+(x>5&&x<=9)*(p_dsz[2]+p_dsz[3]*x)+(x>9&&x<=17)*(p_dsz[4]+p_dsz[5]*x)+(x>17&&x<=200)*(p_dsz[6]+p_dsz[7]*x+p_dsz[8]*pow(x,2))+(x>200)*(p_dsz[6]+p_dsz[7]*200+p_dsz[8]*pow(200,2)),
                  (x<=3.5)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>3.5&&x<=15)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>15&&x<=20)*(p_dxydsz[4]+p_dxydsz[5]*x)+(x>20&&x<=60)*(p_dxydsz[6]+p_dxydsz[7]*x)+(x>60)*p_dxydsz[8]
                  );
    }
  }

  void TrackRescaler::set_BTagDispJet20161(double x, double eta) {  //Alec tried using 1/scale_factor since scale_ seems to divide
    if (fabs(eta) < 1.5) {
      const double p_dxy[3] = {.90391, .896, -.1585};
      const double p_dsz[3] = {.90834, .7094, -.1133};
      const double p_dxydsz[3] = {.7946, .294, .0963};
    
      scales_.set(p_dxy[0]-p_dxy[2]*exp(-p_dxy[1]*x),
                  p_dsz[0]-p_dsz[2]*exp(-p_dsz[1]*x),
	          p_dxydsz[0]-p_dxydsz[2]*exp(-p_dxydsz[1]*x)
		  );
    }
    else {
      const double p_dxy[3] = {.89441, .3372, -.13827};
      const double p_dsz[3] = {.89631, .1800, -.11508};
      const double p_dxydsz[4] = {.73781, 3.41, -6.0, .002034};
      
      scales_.set(p_dxy[0]-p_dxy[2]*exp(-p_dxy[1]*x),
	          p_dsz[0]-p_dsz[2]*exp(-p_dsz[1]*x),
		  p_dxydsz[0]-p_dxydsz[2]*exp(-p_dxydsz[1]*x)+p_dxydsz[3]*x
		  );
    }
  }

  void TrackRescaler::set_BTagDispJet20162(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[1] = {0.981341};
      const double p_dsz[3] = {1.8725, -.0005732, -.1141};
      const double p_dxydsz[3] = {.93580, 2.026, .350};

      scales_.set(p_dxy[0],
		  p_dsz[0]-exp(-p_dsz[1]*x+p_dsz[2]),
		  p_dxydsz[0]-p_dxydsz[2]*exp(-p_dxydsz[1]*x)
                  );
    }
    else {
      const double p_dxy[1] = {0.998868};
      const double p_dsz[3] = {1.2526, -.001625, -1.3885};
      const double p_dxydsz[3] = {.9649, .080, -.0512};

      scales_.set(p_dxy[0],
                  p_dsz[0]-exp(-p_dsz[1]*x+p_dsz[2]),
                  p_dxydsz[0]-p_dxydsz[2]*exp(-p_dxydsz[1]*x)
                  );
    }
  }

  void TrackRescaler::set_BTagDispJet2017(double x, double eta) {
    //Alec
    if (fabs(eta) < 1.5) {
      const double p_dxy[3] = {1.17509, .771, -1.263};
      const double p_dsz[3] = {1.15733, 1.274, -1.257};
      const double p_dxydsz[3] = {1.2828, 3.05, -6.1};

      scales_.set(p_dxy[0]-exp(-p_dxy[1]*x+p_dxy[2]),
                  p_dsz[0]-exp(-p_dsz[1]*x+p_dsz[2]),
                  p_dxydsz[0]-p_dxydsz[2]*exp(-p_dxydsz[1]*x)
                  );
    }
    else {
      const double p_dxy[3] = {1.3108, .2508, -.9690};
      const double p_dsz[3] = {1.2758, .1959, -1.1719};
      const double p_dxydsz[3] = {1.526, .285, -.375};

      scales_.set(p_dxy[0]-exp(-p_dxy[1]*x+p_dxy[2]),
                  p_dsz[0]-exp(-p_dsz[1]*x+p_dsz[2]),
                  p_dxydsz[0]-p_dxydsz[2]*exp(-p_dxydsz[1]*x)
                  );
    }
  }

  void TrackRescaler::set_BTagDispJet2018(double x, double eta) {
    if (fabs(eta) < 1.5) {
      const double p_dxy[3] = {1.09967, 1.582, -.842};
      const double p_dsz[3] = {1.11861, 3.14, .91};
      const double p_dxydsz[3] = {1.0866, .595, -.2691};

      scales_.set(p_dxy[0]-exp(-p_dxy[1]*x+p_dxy[2]),
                  p_dsz[0]-exp(-p_dsz[1]*x+p_dsz[2]),
                  p_dxydsz[0]-p_dxydsz[2]*exp(-p_dxydsz[1]*x)
                  );
    }
    else {
      const double p_dxy[3] = {1.1875, .3201, -1.4224};
      const double p_dsz[3] = {1.06183, .402, -2.5405};
      const double p_dxydsz[3] = {1.259, .097, -.197};

      scales_.set(p_dxy[0]-exp(-p_dxy[1]*x+p_dxy[2]),
                  p_dsz[0]-exp(-p_dsz[1]*x+p_dsz[2]),
                  p_dxydsz[0]-p_dxydsz[2]*exp(-p_dxydsz[1]*x)
                  );
    }
  }
// with SingleLepton, if a track has pT > 200GeV, scaling based off of the scaling at 200 (will be straight rescaling; not continuation of function)
 void TrackRescaler::set_SingleLep2016BC(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        const double p_dxy[5] = {0.9638261039563735, -0.03207712440971401, 0.0024671875339926687, 0.8645380430245057, -0.0007722240737755249};
        const double p_dsz[5] = {0.9522541199642603, -0.02708900196942797, 0.0019008442417165657, 0.8529663941762214, -0.00015063163556874783};
        const double p_dxydsz[5] = {0.6583528958168645, 0.030534422753914256, -0.0016277492739623246, 0.7975928379091342, 0.0009025057907720443};

        scales_.set((x<=8)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>8&&x<=200)*(p_dxy[3]+p_dxy[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                    (x<=8)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>8&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                    (x<=10)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>10&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
        );

      }
      if (type == "electron") {
        const double p_dxy[2] = {0.8405202356126538, -2.3270456678122983e-05};
        const double p_dsz[2] = {0.8333626429820029, 3.164062283057042e-05};
        const double p_dxydsz[] = {0.7325971118004946, 0.0010040909465825949}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
        );
      }
      if (type == "muon") {
        const double p_dxy[2] = {0.8407276480351962, -0.0004601990586230774};
        const double p_dsz[2] = {0.8508937795307924, -5.303767310161755e-05};
        const double p_dxydsz[2] = {0.8276210497268961, 0.00012194453338177074};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[5] = {0.9996386582630118, -0.02211930775182362, 0.0007264377953517782, 0.8509561374482384, -0.00029320578886723233};
        const double p_dsz[5] = {0.9938398377528611, -0.02099697176666402, 0.0005581650363945105, 0.786296897570581, -0.00018734851924174806};
        const double p_dxydsz[5] = {0.749927487999964, -0.030026305573205403, 0.006024277528793313, 0.7913049856015941, -3.785778912847315e-05};  

        scales_.set((x<=20)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>20&&x<=200)*(p_dxy[3]+p_dxy[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                    (x<=20)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>20&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                    (x<=6)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>6&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
            );
      }
      if (type == "electron") {
        const double p_dxy[2] = {0.8278857464272988, 9.89827118842478e-05};
        const double p_dsz[2] = {0.8208769563746516, -0.00039840657905866866};
        const double p_dxydsz[2] = {0.9138538892081143, 0.00045804180163324434}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {0.8500429770635187, -0.0004664947608015134};
        const double p_dsz[2] = {0.7791737786137813, -0.0002245943684251652};
        const double p_dxydsz[2] = {0.7982700304271191, 4.3254364439834596e-05};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
    }
  }

  void TrackRescaler::set_SingleLep2016DEF(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        const double p_dxy[5] = {0.9769462281451897, -0.018874363410992162, 0.0016436714447148268, 0.93073463585661, -0.0005236542947519192};
        const double p_dsz[5] = {0.9770996646685013, -0.014030111631950407, 0.0011083275145709788, 0.9356517118853516, -0.00022382292795847247};
        const double p_dxydsz[5] = {0.7819557574637931, 0.020276427340037408, -0.0007015873112869765, 0.9343999404150198, -0.00012775580456142466};

        scales_.set((x<=8)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>=8&&x<=200)*(p_dxy[3]+p_dxy[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                    (x<=8)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>=8&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                    (x<=18)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>=18&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
        );

      }
      if (type == "electron") {
        const double p_dxy[2] = {0.9178492406629266, 0.00029670459299170615};
        const double p_dsz[2] = {0.923474236513722, 0.00012267456321549217};
        const double p_dxydsz[2] = {0.8475848138718027, 0.0009584099656876222}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
        );
      }
      if (type == "muon") {
        const double p_dxy[2] = {0.9172351455486711, -0.00022646993488081423};
        const double p_dsz[2] = {0.8508937795307924, -5.303767310161755e-05};
        const double p_dxydsz[2] = {0.961425204185443, -0.0001550480424697149};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[5] = {1.0011983597544034, -0.015067841182373422, 0.0004431641246189639, 0.8895968202933113, -0.00021494323194744713};
        const double p_dsz[5] = {1.0033837066216909, -0.007209658942561467, 0.00019396722537742134, 0.9560555071185404, -0.0005950973571676767};
        const double p_dxydsz[5] = {0.8764144911511726, -0.050222814008263866, 0.007043672737619796, 0.8175856433556248, 0.001095621880293138};  

        scales_.set((x<=14)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>14&&x<=200)*(p_dxy[3]+p_dxy[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                    (x<=12)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>12&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                    (x<=6)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>6&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
                    );
      }
      if (type == "electron") {
        const double p_dxy[2] = {0.8966130887918794, 0.0003231029044753978};
        const double p_dsz[2] = {0.9835128580273846, -2.3729181926182563e-05};
        const double p_dxydsz[2] = {0.8796432419976747, 0.0005671902524545733}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {0.889415454682025, -0.00025668237298784227};
        const double p_dsz[2] = {0.93585793804968, -0.00012668122442242163};
        const double p_dxydsz[2] = {0.8748857543983535, 0.0003425082705856494};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
    }
  }

 void TrackRescaler::set_SingleLep2016(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        const double p_dxy[7] = {0.9920010571552422, -0.005944506409745561, 0.0006862176797598997, 0.9876253292452375, -0.0009684217020550416, 0.9559174361550364, -0.00031899089857540495};
        const double p_dsz[5] = {0.9911385693983847, -0.006446225309624326, 0.0004882812680430705, 0.9726596696027426, -0.0002374674568048638};
        const double p_dxydsz[5] = {0.8929195521192195, 0.038608157484050665, -0.004427845723611257, 0.9750566834280994, -0.00028518478774965496};

        scales_.set((x<=6)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>6&&x<=60)*(p_dxy[3]+p_dxy[4]*x)+(x>60&&x<=200)*(p_dxy[5]+p_dxy[6]*x)+(x>200)*(p_dxy[5]+p_dxy[6]*200),
                    (x<=8)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>8&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                    (x<=6)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>6&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
  );

      }
      if (type == "electron") {
        const double p_dxy[2] = {0.9872475165147006, -8.850994623565544e-05};
        const double p_dsz[2] = {0.9642578620320479, 7.58112528781987e-05};
        const double p_dxydsz[2] = {0.944348053511271, 0.0005736906500464429}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
        );
      }
      if (type == "muon") {
        const double p_dxy[2] = {0.9611958864356989, -0.00016690120737859228};
        const double p_dsz[2] = {0.9791557354765856, -2.8698379505563004e-05};
        const double p_dxydsz[2] = {1.0199096098431548, -1.6789739471830684e-05};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[5] = {1.0077751732491917, -0.0040199053132503465, 0.00018603976241413425, 0.9804330274837163, 6.622691103824047e-05};
        const double p_dsz[5] = {1.010326413875115, -0.003003972166731244, 0.0001402087968604259, 0.9901258769433297, -0.00013487635392253963};
        const double p_dxydsz[5] = {1.0055726943916559, 0.00630585329431307, -0.0008884480925999391, 0.9511761741929029, 0.0002402528551177747};  

        scales_.set((x<=10)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>10&&x<=200)*(p_dxy[3]+p_dxy[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                    (x<=14)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>14&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                    (x<=12)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>12&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
                    );
      }
      if (type == "electron") {
        const double p_dxy[2] = {0.9628578293270929, 5.133752910193006e-05};
        const double p_dsz[2] = {1.0240437296961853, 0.00013154054768041174};
        const double p_dxydsz[2] = {0.9125360214832523, 0.00047996180431927014}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.0044056231377168, -0.00017349440187459757};
        const double p_dsz[2] = {0.9923656375200799, -6.14950227197427e-05};
        const double p_dxydsz[2] = {1.06563383190894, -8.581058450841082e-05};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
    }
  }

  void TrackRescaler::set_SingleLep2017B(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        const double p_dxy[7] = {1.0454721390457333, 0.04048079999971112, -0.0023706040731047897, 1.2024041869995274, 0.000606034081486006, 1.2288316843468494, -7.350552496262e-06};
        const double p_dsz[7] = {1.1271052415348382, 0.04083444981809002, -0.005074780163856769, 1.211121713287746, -0.001666029758976395, 1.1864441472534977, -0.00038567217636110724};
        const double p_dxydsz[8] = {1.2644143041866822, -0.08739889408993944, 0.0053593907430474, 0.8609954912428077, 0.015955111443267236, -0.0001803225632503613, 1.1525512610632227, 0.0004948115015647739};

        scales_.set( (x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=40)*(p_dxy[3]+p_dxy[4]*x)+(x>40&&x<=200)*(p_dxy[5]+p_dxy[6]*x) + (x>200)*(p_dxy[5]+p_dxy[6]*x),
                     (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=20)*(p_dsz[3]+p_dsz[4]*x)+(x>20&&x<=200)*(p_dsz[5]+p_dsz[6]*x)+(x>200)*(p_dsz[5]+p_dsz[6]*x),
                     (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>5&&x<=28)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>28&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x)+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200)
  );

      }
      if (type == "electron") {
        const double p_dxy[2] = {1.2312900296981657, 0.00032433882405982946};
        const double p_dsz[2] = {1.1302393516818257, 1.5231586100905754e-05};
        const double p_dxydsz[4] = {1.338934551458959, -0.007389978939307632, 0.8183582143715308, 0.0028451233549176506}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=48)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>=48&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
        );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.2029378995872801, 0.00021194662169056293};
        const double p_dsz[2] = {1.1537696465420137, -0.00013815080455450643};
        const double p_dxydsz[4] = {1.0130679529796556, 0.004399353947629048, 1.178877316119162, -1.7588161391291893e-05};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=36)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>=36&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[8] = {1.0239780292649785, 0.02520490281611497, 0.002698615774764072, 1.0010044623638974, 0.057398368065915695, -0.002938305190546185, 1.2900894090755863, -0.0005510384458186383};
        const double p_dsz[8] = {1.0132032528242354, 0.007225698614186541, 0.0015057608149426356, 1.0358552524840738, 0.014251842128965374, -0.0005818359396350325, 1.1246478047610629, -0.00020026750523001097};
        const double p_dxydsz[9] = {1.702212161121248, 0.09174461670037509, -0.0249812243214131, 1.2487329717635056, 0.05953208911604566, -0.005792931005113104, 1.295049262823619, -0.006799122678991797, 3.6640088147614006e-05};  

        scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=12)*(p_dxy[3]+p_dxy[4]*x+p_dxy[5]*pow(x,2))+(x>12&&x<=200)*(p_dxy[6]+p_dxy[7]*x)+(x>200)*(p_dxy[6]+p_dxy[7]*200),
                    (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=15)*(p_dsz[3]+p_dsz[4]*x+p_dsz[5]*pow(x,2))+(x>15&&x<=200)*(p_dsz[6]+p_dsz[7]*x)+(x>200)*(p_dsz[6]+p_dsz[7]*200),
                    (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>5&&x<=10)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>10&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*200+p_dxydsz[8]*pow(200,2)) 
                    );
      }
      if (type == "electron") {
        const double p_dxy[2] = {1.2229654232763405, -0.0003317884256202105};
        const double p_dsz[2] = {1.2484828975970736, -9.174600320183135e-06};
        const double p_dxydsz[4] = {1.338934551458959, -0.007389978939307632, 0.8183582143715308, 0.0028451233549176506}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=48)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>48&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.2805288429006463, -0.0004655395286243015};
        const double p_dsz[2] = {1.094802867952775, -0.00016840018580808504};
        const double p_dxydsz[2] = {1.1233993994339913, 3.1707971984913305e-05};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
    }
  }

  void TrackRescaler::set_SingleLep2017C(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        const double p_dxy[5] = {1.059641097516078, 0.05355230462527581, -0.004035569142998144, 1.2346564744807427, 3.673845265084457e-05};
        const double p_dsz[5] = {1.199650922965201, 0.04880983957744797, -0.005899743231336449, 1.2958603495433494, -0.00048345549540422484};
        const double p_dxydsz[8] = {1.3304021118609355, -0.14055500597143886, 0.010221260054717646, 0.7662940769725408, 0.01857369813944161, -0.00016071259609379463, 1.2449996980550508, 0.00027438706156283};

        scales_.set( (x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=200)*(p_dxy[3]+p_dxy[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                     (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                     (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>5&&x<=40)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>40&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x)+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200)

        );

      }
      if (type == "electron") {
        const double p_dxy[2] = {1.24632778626058, 8.122188831585601e-05};
        const double p_dsz[2] = {1.2223777762328998, 7.452056333705388e-05};
        const double p_dxydsz[4] = {0.46226664045771193, 0.018490665598300163, 1.0934584514537145, -4.537875085186462e-05}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=34)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>34&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
        );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.2186236617871937, 0.00019568422325389953};
        const double p_dsz[2] = {1.2558210890130663, -6.763380220721829e-05};
        const double p_dxydsz[5] = {0.9727968298074766, 0.010103177629208596, -8.759493166014294e-05, 1.2374795635910647, 0.00024615718031321216};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=58)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>58&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[8] = {1.0270365089480384, 0.036437408283363226, 0.0020643417672699567, 1.0398578225369, 0.059259570546125254, -0.0031268235714700526, 1.3296690181377513, -0.0008625899926714985};
        const double p_dsz[8] = {1.0268428362785673, 0.026047828262683724, 0.0017275790789553552, 1.1117744843672137, 0.024829651511513832, -0.0009580303190045584, 1.2817959787570397, -3.371302578978346e-05};
        const double p_dxydsz[9] = {1.9401246864088815, 0.048005781575542854, -0.02759910971159079, 1.2100418011246743, 0.05468228144546295, -0.00615472879715802, 1.1457158446658706, -0.00377174740097163, 2.7559399752510938e-05};  

        scales_.set( (x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=12)*(p_dxy[3]+p_dxy[4]*x+p_dxy[5]*pow(x,2))+(x>12&&x<=200)*(p_dxy[6]+p_dxy[7]*x)+(x>200)*(p_dxy[6]+p_dxy[7]*200),
                     (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=15)*(p_dsz[3]+p_dsz[4]*x+p_dsz[5]*pow(x,2))+(x>15&&x<=200)*(p_dsz[6]+p_dsz[7]*x)+(x>200)*(p_dsz[6]+p_dsz[7]*200),
                     (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>5&&x<=10)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>10&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x+p_dxydsz[8]*pow(x,2))+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200+p_dxydsz[8]*pow(200,2)) 
                    );
      }
      if (type == "electron") {
        const double p_dxy[2] = {1.194475778317351, -0.0005006930665749348};
        const double p_dsz[2] = {1.1416269064698705, -0.0003048956175720624};
        const double p_dxydsz[] = {1.4659366479767104, -0.012224404421175755, 0.722205195948968, 0.0030473397253428106}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=48)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>48&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.3114715883411945, -0.0005460967294515021};
        const double p_dsz[2] = {1.2567894389648686, -0.00010318384636457192};
        const double p_dxydsz[2] = {1.036701282510824, 0.0017594573824004037};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
    }
  }

  void TrackRescaler::set_SingleLep2017D(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        const double p_dxy[5] = {1.0449405218573586, 0.04041741588818197, -0.0025603214474102624, 1.1971022964095115, -0.00028263101684195414};
        const double p_dsz[5] = {1.1089086467990208, 0.03678472258881693, -0.0033503695907639366, 1.2213126797049578, -0.00010802017674114636};
        const double p_dxydsz[8] = {1.305348703600988, -0.07747756123249092, 0.0039152494041306525, 0.9999139534157179, -0.002301243802351076, 0.0002905622314241067, 1.0916051244293732, 0.001221922553808987};

        scales_.set( (x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=200)*(p_dxy[3]+p_dxy[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                     (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                     (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>5&&x<=24)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>24&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x)+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200)
        );

      }
      if (type == "electron") {
        const double p_dxy[2] = {1.188122572539288, 0.00010935634624026011};
        const double p_dsz[2] = {1.181020469627855, 5.292700751270349e-05};
        const double p_dxydsz[4] = {0.48573472147564645, 0.019429388861749133, 1.074485507062449, 0.0001217147755847971}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=32)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>=32&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
        );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.1834123898295137, -0.00016479766652728427};
        const double p_dsz[2] = {1.210289871203046, -6.925115365641853e-05};
        const double p_dxydsz[5] = {0.9642255675501936, 0.007862476759033088, -6.656803401855993e-05, 1.1762043641257771, 0.0002689898599656622};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=58)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>58&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[8] = {1.0219438794566025, 0.026915685631381372, 0.0022335028609826724, 0.9954869879310493, 0.056842566243907676, -0.0029750538436284675, 1.2754620746926133, -0.0003289445003313669};
        const double p_dsz[8] = {1.0122876954294187, 0.007755005515062908, 0.001780973568782762, 1.028542830166449, 0.01766846023529924, -0.0006495303614798221, 1.1538833043934955, 0.00040189814315956106};
        const double p_dxydsz[9] = {1.7654809512125578, 0.08220680952723297, -0.025099357749948578, 1.2538838100032699, 0.05951890619322495, -0.005863748640161635, 1.271598003336302, -0.005210570945165763, 2.5120773977299175e-05};  

        scales_.set( (x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=10)*(p_dxy[3]+p_dxy[4]*x+p_dxy[5]*pow(x,2))+(x>10&&x<=200)*(p_dxy[6]+p_dxy[7]*x)+(x>200)*(p_dxy[6]+p_dxy[7]*x),
                     (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=15)*(p_dsz[3]+p_dsz[4]*x+p_dsz[5]*pow(x,2))+(x>15&&x<=200)*(p_dsz[6]+p_dsz[7]*x)+(x>200)*(p_dsz[6]+p_dsz[7]*x),
                     (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>=5&&x<=11)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>=11&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x+p_dxydsz[8]*pow(x,2))+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200+p_dxydsz[8]*pow(200,2))
                    );
      }
      if (type == "electron") {
        const double p_dxy[2] = {1.192866479086086, -0.0003907170600610122};
        const double p_dsz[2] = {1.1540523564016911, -0.00011511528792911702};
        const double p_dxydsz[4] = {1.4798444384127198, -0.009452204840421105, 0.8838799412016833, 0.0028177423540321467}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=48)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>48&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.2809735039671792, -0.0004336302757189936};
        const double p_dsz[2] = {1.1532203568642658, 4.971779367657185e-05};
        const double p_dxydsz[2] = {1.156579704972313, 0.00011386043859610076};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
    }
  }

  void TrackRescaler::set_SingleLep2017E(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        const double p_dxy[7] = {1.024456260022345, 0.03357290572238218, -0.002853085601525066, 1.1301634498138307, -0.0009172528240628981, 1.1086034672954395, -0.0003052307678100865};
        const double p_dsz[5] = {1.0539479693172455, 0.024948102307090936, -0.0026628860730077766, 1.115610334169528, -0.0002426913095787955};
        const double p_dxydsz[8] = {1.21247460587377, -0.032015463211115994, -0.000730805816339182, 1.0304658160186833, -0.005964747311309221, 0.0004324345823151299, 1.0447852816986651, 0.0005426410653468554};

        scales_.set( (x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=25)*(p_dxy[3]+p_dxy[4]*x)+(x>25&&x<=200)*(p_dxy[5]+p_dxy[6]*x)+(x>200)*(p_dxy[5]+p_dxy[6]*200),
                     (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                     (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>=5&&x<=18)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>18&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x)+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200)
        );

      }
      if (type == "electron") {
        const double p_dxy[2] = {1.1056648736687922, 0.0003349657998984838};
        const double p_dsz[2] = {1.0720434659109024, 7.156351872521314e-05};
        const double p_dxydsz[2] = {1.1323531734657826, 0.001043167413794452}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
        );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.093483370852844, -0.00014788035113845466};
        const double p_dsz[2] = {1.0968191324161674, -6.744217018386962e-05};
        const double p_dxydsz[2] = {1.0804241597525044, 0.00020722835670866982};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[8] = {1.0129765341939894, 0.017302524056451205, 0.0026499263438049207, 0.9477673201378223, 0.055084596444820104, -0.0026104793767137806, 1.244405850968552, -0.0007201352642008863};
        const double p_dsz[8] = {1.0003535275162123, 0.0017113195719508437, 0.0009308643480153405, 1.0237191007765691, 0.0028565033937254097, 0.0, 1.0587568081049843, -5.675189932928624e-05};
        const double p_dxydsz[9] = {1.5119677292372151, 0.09358092281606549, -0.019949277439937674, 1.1992315712252553, 0.06012318167264988, -0.005004265398813121, 1.3686551440087236, -0.007615037088472673, 4.345570097818345e-05};  

        scales_.set( (x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=12)*(p_dxy[3]+p_dxy[4]*x+p_dxy[5]*pow(x,2))+(x>12&&x<=200)*(p_dxy[6]+p_dxy[7]*x)+(x>200)*(p_dxy[6]+p_dxy[7]*200),
                     (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=15)*(p_dsz[3]+p_dsz[4]*x)+(x>15&&x<=200)*(p_dsz[6]+p_dsz[7]*x)+(x>200)*(p_dsz[6]+p_dsz[7]*200),
                     (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>5&&x<=10)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>10&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x+p_dxydsz[8]*pow(x,2))+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200+p_dxydsz[8]*pow(200,2)) 
                    );
      }
      if (type == "electron") {
        const double p_dxy[2] = {1.1610729141155178, -0.00010401122022239868};
        const double p_dsz[2] = {1.0735338555957084, -3.271202258233602e-06};
        const double p_dxydsz[4] = {1.5312098962039156, -0.01018496522717163, 0.8934586499932057, 0.0031623314775170554}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=48)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>48&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.2215271549920654, -0.00032050405912464365};
        const double p_dsz[2] = {1.0482975828506627, -8.024159003983122e-05};
        const double p_dxydsz[2] = {1.1992371367788848, -0.0002882329782700598};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
    }
  }

  void TrackRescaler::set_SingleLep2017F(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        const double p_dxy[5] = {1.0521800742264282, 0.042638428622545785, -0.0033362880473435386, 1.1950279499876233, -0.0002628719466817895};
        const double p_dsz[5] = {1.0719324285711365, 0.02890067353886633, -0.0027571650289382604, 1.15849047538341, -0.0003003783473219247};
        const double p_dxydsz[8] = {1.3311931019044936, -0.05866753792751517, 0.003333866771843179, 1.0069793553705133, 0.01847183372071644, -0.0003151097305022864, 1.2311322825749917, 0.0001484753991998159};

        scales_.set( (x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=200)*(p_dxy[3]+p_dxy[4]*x)+(x>200)*(p_dxy[3]+p_dxy[4]*200),
                     (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=200)*(p_dsz[3]+p_dsz[4]*x)+(x>200)*(p_dsz[3]+p_dsz[4]*200),
                     (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>5&&x<=20)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>20&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x)+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200)
        );

      }
      if (type == "electron") {
        const double p_dxy[2] = {1.217188167627008, 0.00037961215262325397};
        const double p_dsz[2] = {1.1444183556294516, 0.00026021327096494625};
        const double p_dxydsz[2] = {1.1323531734657826, 0.001043167413794452}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
        );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.17893831060346, -2.9194708819218346e-05};
        const double p_dsz[2] = {1.1691102052500675, -0.000125854364936848};
        const double p_dxydsz[2] = {1.2683235979723344, 0.0002273557978133972};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[8] = {1.0239578682773562, 0.020505563506426454, 0.003170821519810303, 0.9745878678436475, 0.05780680166988454, -0.002414751853242754, 1.3283592559754283, -0.001294895979264268};
        const double p_dsz[8] = {1.0384487238505822, 0.022697906577648048, 0.0027238596661408442, 1.0625030826368036, 0.03950087814002015, -0.0012460176657615963, 1.383324296318175, -0.0006565063011642451};
        const double p_dxydsz[9] = {1.6153005084948477, 0.041053579655897454, -0.018374771364016107, 1.0881988219262917, 0.054278827450487295, -0.004439892135391836, 1.2158647596317433, -0.004156922041595644, 3.679671839589482e-05};  

        scales_.set((x<=5)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>5&&x<=11)*(p_dxy[3]+p_dxy[4]*x+p_dxy[5]*pow(x,2))+(x>11&&x<=200)*(p_dxy[6]+p_dxy[7]*x)+(x>200)*(p_dxy[6]+p_dxy[7]*200),
                    (x<=5)*(p_dsz[0]+p_dsz[1]*x+p_dsz[2]*pow(x,2))+(x>5&&x<=15)*(p_dsz[3]+p_dsz[4]*x+p_dsz[5]*pow(x,2))+(x>15&&x<=200)*(p_dsz[6]+p_dsz[7]*x)+(x>200)*(p_dsz[6]+p_dsz[7]*200),
                    (x<=5)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>5&&x<=10)*(p_dxydsz[3]+p_dxydsz[4]*x+p_dxydsz[5]*pow(x,2))+(x>10&&x<=200)*(p_dxydsz[6]+p_dxydsz[7]*x+p_dxydsz[8]*pow(x,2))+(x>200)*(p_dxydsz[6]+p_dxydsz[7]*200+p_dxydsz[8]*pow(200,2))
                    );
      }
      if (type == "electron") {
        const double p_dxy[2] = {1.2776378220566587, -8.512519627691499e-05};
        const double p_dsz[2] = {1.4197911888731871, 0.00029376220042454283};
        const double p_dxydsz[4] = {1.629313788846292, -0.016487061923869048, 0.6771376535386291, 0.003728703117984747}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=48)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>48&&x<=200)*(p_dxydsz[2]+p_dxydsz[3]*x)+(x>200)*(p_dxydsz[2]+p_dxydsz[3]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.2793171801775352, -0.00028276241463419047};
        const double p_dsz[2] = {1.3491903590651946, -5.7680167988726286e-05};
        const double p_dxydsz[5] = {0.8486012277544926, 0.011102819830946263, -5.914731128441139e-05, 1.2888898596807843, 0.0007153862822958265};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=78)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>78&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
                    );
      }
    }
  }

  void TrackRescaler::set_SingleLep2018(double x, double eta, std::string type) {
    if (fabs(eta) < 1.5) {
      if (type == "") {
        // std::cout << "scaling general track" << std::endl;
        const double p_dxy[7] = {1.03112461560515, 0.027939954186664222, -0.0024777135470085247, 1.1198254046663294, -0.0013579297509143465, 1.0600577441006154, 6.09296042624434e-05};
        const double p_dsz[7] = {1.0800117878149493, 0.013423192619346155, 1.1340111602074219, -0.0013106472963789876, 1.1196923400312397, 3.2650883372812786e-05, -7.481787581617157e-07};
        const double p_dxydsz[9] = {1.1423316786920164, -0.025569852427499856, -0.004756678626186833, 0.0006733460884134249, 0.9520196829959118, -0.001750557944344104, 0.0003240758473373313, 1.0499787839829393, 6.349483450061242e-05};

        scales_.set( (x<=6)*(p_dxy[0]+p_dxy[1]*x+p_dxy[2]*pow(x,2))+(x>6&&x<=44)*(p_dxy[3]+p_dxy[4]*x)+(x>44&&x<=200)*(p_dxy[5]+p_dxy[6]*x)+(x>200)*(p_dxy[5]+p_dxy[6]*200),
                     (x<=4)*(p_dsz[0]+p_dsz[1]*x)+(x>4&&x<=10)*(p_dsz[2]+p_dsz[3]*x)+(x>10&&x<=200)*(p_dsz[4]+p_dsz[5]*x+p_dsz[6]*pow(x,2))+(x>200)*(p_dsz[4]+p_dsz[5]*200+p_dsz[6]*pow(200,2)), 
                     (x<=8)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2)+p_dxydsz[3]*pow(x,3))+(x>8&&x<=18)*(p_dxydsz[4]+p_dxydsz[5]*x+p_dxydsz[6]*pow(x,2))+(x>18&&x<=200)*(p_dxydsz[7]+p_dxydsz[8]*x)+(x>200)*(p_dxydsz[7]+p_dxydsz[8]*200)
        );

      }
      if (type == "electron") {
        // std::cout << "scaling electron track" << std::endl;
        const double p_dxy[2] = {1.099165067126334, 0.00018389219215817973};
        const double p_dsz[2] = {1.082789131643491, 3.772593088459831e-05};
        const double p_dxydsz[5] = {1.7127876374625464, -0.034731212907271755, 0.0003816857926977358, 0.896242742480523, 0.0013219868022166306}; 

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=56)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>56&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
        );
      }
      if (type == "muon") {
        // std::cout << "scaling muon track" << std::endl;
        const double p_dxy[2] = {1.0771137416042647, -0.0002944517341002609};
        const double p_dsz[2] = {1.0980008599346949, -4.3607720433033736e-05};
        const double p_dxydsz[5] = {0.8873675573834777, 0.00651830296147308, -6.333660048737822e-05, 1.0357490911388614, 0.000291023640918533};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=56)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2))+(x>56&&x<=200)*(p_dxydsz[3]+p_dxydsz[4]*x)+(x>200)*(p_dxydsz[3]+p_dxydsz[4]*200)
                    );
      }

    }
    else {
      if (type == "") {
        const double p_dxy[7] = {1.0133027312506913, 0.022318204661493413, 1.0132560573122338, 0.030203922649456587, -0.0011920662142896792, 1.2075301903740283, -0.0009030071324799313};
        const double p_dsz[7] = {1.0122428157879715, 0.007255082361121984, 1.0128200774147489, 0.00966372174191818, -0.00040699524051006656, 1.079658308344396, -0.0002488112151517263};
        const double p_dxydsz[11] = {1.3166283744401028, 0.08185582853274989, -0.02577622285830496, 0.0009324392251916928, 0.00011486069705164841, 1.2095572705954116, -0.007444915625685196, 0.0008944005459964158, -2.5539279747627624e-05, 0.9557625567755772, 0.002860260280510063}; 

        scales_.set((x<=4)*(p_dxy[0]+p_dxy[1]*x)+(x>4&&x<=15)*(p_dxy[2]+p_dxy[3]*x+p_dxy[4]*pow(x,2))+(x>15&&x<=200)*(p_dxy[5]+p_dxy[6]*x)+(x>200)*(p_dxy[5]+p_dxy[6]*200),
                    (x<=4)*(p_dsz[0]+p_dsz[1]*x)+(x>4&&x<=15)*(p_dsz[2]+p_dsz[3]*x+p_dsz[4]*pow(x,2))+(x>15&&x<=200)*(p_dsz[5]+p_dsz[6]*x)+(x>200)*(p_dsz[5]+p_dsz[6]*200),
                    (x<=8)*(p_dxydsz[0]+p_dxydsz[1]*x+p_dxydsz[2]*pow(x,2)+p_dxydsz[3]*pow(x,3)+p_dxydsz[4]*pow(x,4))+(x>8&&x<=32)*(p_dxydsz[5]+p_dxydsz[6]*x+p_dxydsz[7]*pow(x,2)+p_dxydsz[8]*pow(x,3))+(x>32&&x<=200)*(p_dxydsz[9]+p_dxydsz[10]*x)+(x>200)*(p_dxydsz[9]+p_dxydsz[10]*200)
                    );
      }
      if (type == "electron") {
        const double p_dxy[2] = {1.1751514975615347, -0.0003876098750689068};
        const double p_dsz[2] = {1.064929992984938, 0.00010390378131054125};
        const double p_dxydsz[2] = {1.202563534368814, -0.001312167352572044};  

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
      if (type == "muon") {
        const double p_dxy[2] = {1.171998902227447, -0.00020640715873641857};
        const double p_dsz[2] = {1.056127201515852, -3.531929262842737e-05};
        const double p_dxydsz[2] = {1.1176629427965068, 0.0003558852632608422};

        scales_.set((x>=20&&x<=200)*(p_dxy[0]+p_dxy[1]*x)+(x>200)*(p_dxy[0]+p_dxy[1]*200),
                    (x>=20&&x<=200)*(p_dsz[0]+p_dsz[1]*x)+(x>200)*(p_dsz[0]+p_dsz[1]*200),
                    (x>=20&&x<=200)*(p_dxydsz[0]+p_dxydsz[1]*x)+(x>200)*(p_dxydsz[0]+p_dxydsz[1]*200)
                    );
      }
    }
  }


  void TrackRescaler::set(double era, int /*which*/, double pt, double eta) {
    if (enable()) {
      //if      (era == jmt::AnalysisEras::e_2017B) set_JetHT2017B(pt, eta);
      //else if (era == jmt::AnalysisEras::e_2017C) set_JetHT2017C(pt, eta);
      //else if (era == jmt::AnalysisEras::e_2017D || era == jmt::AnalysisEras::e_2017E) set_JetHT2017DE(pt, eta);     Alec changed
      //else if (era == jmt::AnalysisEras::e_2017F) set_JetHT2017F(pt, eta);
      //else if (era == jmt::AnalysisEras::e_2018A) set_JetHT2018A(pt, eta);
      //else if (era == jmt::AnalysisEras::e_2018B) set_JetHT2018B(pt, eta);
      //else if (era == jmt::AnalysisEras::e_2018C) set_JetHT2018C(pt, eta);
      //else if (era == jmt::AnalysisEras::e_2018D) set_JetHT2018D(pt, eta);

      if      (era == jmt::AnalysisEras::e_2017B || era == jmt::AnalysisEras::e_2017C || era == jmt::AnalysisEras::e_2017D || era == jmt::AnalysisEras::e_2017E || era == jmt::AnalysisEras::e_2017F) set_BTagDispJet2017(pt, eta);
      else if (era == jmt::AnalysisEras::e_2018A || era == jmt::AnalysisEras::e_2018B || era == jmt::AnalysisEras::e_2018C || era == jmt::AnalysisEras::e_2018D) set_BTagDispJet2018(pt, eta);
      else if (era == jmt::AnalysisEras::e_20161B1 || era == jmt::AnalysisEras::e_20161B2 || era == jmt::AnalysisEras::e_20161C || era == jmt::AnalysisEras::e_20161D || era == jmt::AnalysisEras::e_20161E || era == jmt::AnalysisEras::e_20161F) set_BTagDispJet20161(pt, eta);
      else if (era == jmt::AnalysisEras::e_20162F || era == jmt::AnalysisEras::e_20162G || era == jmt::AnalysisEras::e_20162H) set_BTagDispJet20162(pt, eta);

      else throw std::out_of_range("bad era");
    }
    else
      scales_.reset();
  }

  void TrackRescaler::set(double era, int /*which*/, double pt, double eta, std::string type) {
    if (enable()) {
      if       (era ==jmt::AnalysisEras::e_20161B1 || era==jmt::AnalysisEras::e_20161B2 || era == jmt::AnalysisEras::e_20161C) set_SingleLep2016BC(pt, eta, type);
      else if  (era == jmt::AnalysisEras::e_20161D || era == jmt::AnalysisEras::e_20161E || era == jmt::AnalysisEras::e_20161F) set_SingleLep2016DEF(pt, eta, type);
      else if  (era ==jmt::AnalysisEras::e_20162F || era == jmt::AnalysisEras::e_20162G || era == jmt::AnalysisEras::e_20162H) set_SingleLep2016(pt, eta, type);
      else if  (era == jmt::AnalysisEras::e_2017B) set_SingleLep2017B(pt, eta, type);
      else if  (era == jmt::AnalysisEras::e_2017C) set_SingleLep2017C(pt, eta, type);
      else if  (era == jmt::AnalysisEras::e_2017D) set_SingleLep2017D(pt, eta, type);
      else if  (era == jmt::AnalysisEras::e_2017E) set_SingleLep2017E(pt, eta, type);
      else if  (era == jmt::AnalysisEras::e_2017F) set_SingleLep2017F(pt, eta, type);
      else if  (era == jmt::AnalysisEras::e_2018A || era==jmt::AnalysisEras::e_2018B || era==jmt::AnalysisEras::e_2018C || era==jmt::AnalysisEras::e_2018D) set_SingleLep2018(pt, eta, type);

      else throw std::out_of_range("bad era");

    }
    else
      scales_.reset();
  }

  TrackRescaler::ret_t TrackRescaler::scale(const reco::Track& tk) {
    ret_t r;
    r.tk = tk;

    if (enable()) {
      set(era_, which_, tk.pt(), tk.eta());

      reco::TrackBase::CovarianceMatrix cov = tk.covariance();

      const int i_dxy = reco::TrackBase::i_dxy;
      const int i_dsz = reco::TrackBase::i_dsz;

      for (int idim = 0; idim < reco::TrackBase::dimension; ++idim) {
        if (idim == i_dxy) cov(idim, i_dxy) *= scales_.dxycov();
        else               cov(idim, i_dxy) *= scales_.dxyerr();
      }

      for (int idim = 0; idim < reco::TrackBase::dimension; ++idim) {
        if (idim == i_dsz) cov(idim, i_dsz) *= scales_.dszcov();
        else               cov(idim, i_dsz) *= scales_.dszerr();
      }

      cov(i_dxy, i_dsz) *= scales_.dxydszcov();

      r.rescaled_tk = reco::Track(tk.chi2(), tk.ndof(), tk.referencePoint(), tk.momentum(), tk.charge(), cov, tk.algo());
      r.rescaled_tk.setQualityMask(tk.qualityMask());
      r.rescaled_tk.setNLoops(tk.nLoops());
      (*const_cast<reco::HitPattern*>(&r.rescaled_tk.hitPattern())) = tk.hitPattern(); // lmao
    }
    else
      r.rescaled_tk = tk;

    return r;
  }

  TrackRescaler::ret_t TrackRescaler::scale(const reco::Track& tk, std::string type) {
    ret_t r;
    r.tk = tk;

    if (enable()) {
      set(era_, which_, tk.pt(), tk.eta(), type);

      reco::TrackBase::CovarianceMatrix cov = tk.covariance();

      const int i_dxy = reco::TrackBase::i_dxy;
      const int i_dsz = reco::TrackBase::i_dsz;

      for (int idim = 0; idim < reco::TrackBase::dimension; ++idim) {
        if (idim == i_dxy) cov(idim, i_dxy) *= scales_.dxycov();
        else               cov(idim, i_dxy) *= scales_.dxyerr();
      }

      for (int idim = 0; idim < reco::TrackBase::dimension; ++idim) {
        if (idim == i_dsz) cov(idim, i_dsz) *= scales_.dszcov();
        else               cov(idim, i_dsz) *= scales_.dszerr();
      }

      cov(i_dxy, i_dsz) *= scales_.dxydszcov();

      r.rescaled_tk = reco::Track(tk.chi2(), tk.ndof(), tk.referencePoint(), tk.momentum(), tk.charge(), cov, tk.algo());
      r.rescaled_tk.setQualityMask(tk.qualityMask());
      r.rescaled_tk.setNLoops(tk.nLoops());
      (*const_cast<reco::HitPattern*>(&r.rescaled_tk.hitPattern())) = tk.hitPattern(); // lmao
    }
    else
      r.rescaled_tk = tk;

    return r;
  }
}
